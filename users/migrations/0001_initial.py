# Generated by Django 3.2.23 on 2024-01-05 15:41

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(editable=False, max_length=128, verbose_name='password')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='SHOULD BE IN UPPERCASE!', max_length=20)),
                ('rank', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('campus', models.CharField(blank=True, max_length=50, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=users.models.profile_image_directory_path)),
                ('country', django_countries.fields.CountryField(blank=True, default='NG', max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_address', models.CharField(blank=True, max_length=255, null=True)),
                ('street_name', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_address_lat', models.FloatField(blank=True, null=True)),
                ('primary_address_lng', models.FloatField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('calling_code', models.CharField(blank=True, max_length=5, null=True)),
                ('phone_number_verified', models.BooleanField(default=False, editable=False)),
                ('has_required_fields', models.BooleanField(default=False, editable=False)),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.gender')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('country', django_countries.fields.CountryField(default='NG', max_length=2)),
                ('campuses', models.JSONField(blank=True, default=list, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(default='NGN', max_length=4)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, default=0.0, editable=False, max_digits=100, null=True)),
                ('uncleared_balance', models.DecimalField(blank=True, decimal_places=2, default=0.0, editable=False, max_digits=100, null=True)),
                ('passcode', models.CharField(blank=True, editable=False, max_length=128, null=True, verbose_name='passcode')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_token', models.TextField()),
                ('device_type', models.CharField(blank=True, max_length=100, null=True)),
                ('device_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('activity_type', models.CharField(choices=[('view', 'view'), ('added_to_cart', 'added_to_cart'), ('purchased', 'purchased'), ('add_to_items', 'add_to_items'), ('remove_from_order', 'remove_from_order'), ('add_to_order', 'add_to_order'), ('remove_from_items', 'remove_from_items')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.item')),
            ],
            options={
                'verbose_name_plural': 'User Activities',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, unique=True)),
                ('gateway_transfer_id', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True)),
                ('currency', models.CharField(default='NGN', editable=False, max_length=4)),
                ('title', models.CharField(max_length=50)),
                ('desc', models.CharField(blank=True, max_length=200, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=7)),
                ('transaction_fee', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=7)),
                ('status', models.CharField(choices=[('success', 'success'), ('failed', 'failed'), ('pending', 'pending'), ('reversed', 'reversed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('_type', models.CharField(choices=[('credit', 'credit'), ('debit', 'debit')], max_length=20)),
                ('order', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.order')),
                ('wallet', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='users.wallet')),
            ],
            options={
                'ordering': ['-created_at', '-updated_on'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus', models.CharField(blank=True, max_length=50, null=True)),
                ('hostel_fields', models.JSONField(blank=True, default=list, null=True)),
                ('hostel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.hostel')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=100)),
                ('store_country', django_countries.fields.CountryField(default='NG', max_length=2)),
                ('store_timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('store_type', models.CharField(blank=True, max_length=20, null=True)),
                ('store_categories', models.JSONField(blank=True, default=list, editable=False, null=True)),
                ('store_phone_numbers', models.JSONField(blank=True, default=list, editable=False, null=True)),
                ('store_bio', models.CharField(blank=True, max_length=150, null=True)),
                ('store_address', models.CharField(blank=True, max_length=60, null=True)),
                ('store_campus', models.CharField(blank=True, max_length=50, null=True)),
                ('store_nickname', models.CharField(blank=True, max_length=50, null=True)),
                ('store_cover_image', models.ImageField(blank=True, null=True, upload_to=users.models.store_cover_image_directory_path)),
                ('store_rank', models.FloatField(default=0, editable=False)),
                ('store_open_hours', models.JSONField(blank=True, default=list, null=True)),
                ('store_menu', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('has_physical_store', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('store_school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.school')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'ordering': ['-store_rank'],
            },
        ),
        migrations.CreateModel(
            name='HostelField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('field_type', models.CharField(max_length=10)),
                ('placeholder', models.CharField(blank=True, max_length=100)),
                ('options', models.JSONField(blank=True, default=list, null=True)),
                ('loop_prefix', models.CharField(blank=True, max_length=10)),
                ('is_loop', models.BooleanField(default=False)),
                ('loop_range', models.IntegerField(blank=True, null=True)),
                ('loop_suffix', models.CharField(blank=True, choices=[('number', 'number'), ('alphabet', 'alphabet')], max_length=10)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.school')),
            ],
            options={
                'verbose_name': 'Hostel Arrangement Field',
                'verbose_name_plural': 'Hostel Arrangement Fields',
            },
        ),
        migrations.AddField(
            model_name='hostel',
            name='fields',
            field=models.ManyToManyField(blank=True, to='users.HostelField'),
        ),
        migrations.AddField(
            model_name='hostel',
            name='gender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.gender'),
        ),
        migrations.AddField(
            model_name='hostel',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.school'),
        ),
        migrations.CreateModel(
            name='DeliveryPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=False)),
                ('is_on_delivery', models.BooleanField(default=False)),
                ('not_allowed_bash', models.JSONField(blank=True, default=list, null=True)),
                ('not_allowed_locations', models.JSONField(blank=True, default=list, null=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'verbose_name_plural': 'Delivery People',
                'ordering': ['-is_available'],
            },
        ),
    ]
